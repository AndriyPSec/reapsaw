#  Copyright (c) 2018 Dow Jones & Company, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

import ssl

from urllib.request import urlopen
from bs4 import BeautifulSoup

CWE_LINK = "https://cwe.mitre.org/data/definitions/"
CVE_LINK = "https://nvd.nist.gov/vuln/detail/"


def get_cwe_info(cwe):
    """Return venerability information from Common Weakness Enumeration site by CWE code"""
    try:
        ctx = ssl.create_default_context()
        ctx.check_hostname = False
        ctx.verify_mode = ssl.CERT_NONE
        html = urlopen(CWE_LINK + cwe, context=ctx)
        soup = BeautifulSoup(html, 'html.parser')
        description = soup.find('div', {'id': 'Description'}).find('div', {'class': 'indent'}).text
        return description
    except Exception as ex:
        print(f"Unable to get {CWE_LINK}{cwe}")
        print(ex)
        return None


def get_cve_info(cve):
    """Return venerability information from National Vulnerability Database by CVE code"""
    try:
        ctx = ssl.create_default_context()
        ctx.check_hostname = False
        ctx.verify_mode = ssl.CERT_NONE
        html = urlopen(CVE_LINK + cve, context=ctx)
        soup = BeautifulSoup(html, "lxml")
        cve_description = soup.find('p', {
            'data-testid': 'vuln-description'}).text
        cve_type = soup.find('li', {
            'data-testid': 'vuln-technical-details-0-link'}).text
        cve_type = cve_type[:cve_type.rfind("(CWE")]
        return cve_type, cve_description
    except Exception as ex:
        print(f"Unable to get {CVE_LINK}{cve}")
        print(ex)
        return None, None
